
////////////////////////////////// BOOTSTRAP > MIXINS //////////////////////////////////

@mixin clearfix() {
    &:before,
    &:after {
        content: " "; /* 1 */
        display: table; /* 2 */
    }
    &:after {
        clear: both;
    }
}

%clearfix {
    @include clearfix();
}

.clearfix {
    @extend %clearfix;
}

// WebKit-style focus
@mixin tab-focus() {
    // Default
    outline: thin dotted #333;
    // WebKit
    outline: 5px auto -webkit-focus-ring-color;
    outline-offset: -2px;
}

// Form validation states
@mixin form-control-validation($text-color: #555, $border-color: #ccc, $background-color: #f5f5f5) {
    // Color the label and help text
    .help-block,
    .control-label,
    .radio,
    .checkbox,
    .radio-inline,
    .checkbox-inline  {
        color: $text-color;
    }
    // Set the border and box shadow on specific inputs to match
    .form-control {
        border-color: $border-color;
        box-shadow: inset 0 1px 1px rgba(0,0,0,.075); // Redeclare so transitions work
        &:focus {
            border-color: darken($border-color, 10%);
            $shadow: inset 0 1px 1px rgba(0,0,0,.075), 0 0 6px lighten($border-color, 20%);
            box-shadow: $shadow;
        }
    }
    // Set validation states also for addons
    .input-group-addon {
        color: $text-color;
        border-color: $border-color;
        background-color: $background-color;
    }
}

// Button variants
@mixin button-variant($color, $background, $border) {
    color: $color;
    background-color: $background;
    border-color: $border;
    text-decoration: none;

  &:hover,
  &:focus,
  &:active,
  &.active {
    color: $color;
    background-color: darken($background, 8%);
        border-color: darken($border, 12%);
  }
  .open & { &.dropdown-toggle {
    color: $color;
    background-color: darken($background, 8%);
        border-color: darken($border, 12%);
  } }
  &:active,
  &.active {
    background-image: none;
  }
  .open & { &.dropdown-toggle {
    background-image: none;
  } }
  &.disabled,
  &[disabled],
  fieldset[disabled] & {
    &,
    &:hover,
    &:focus,
    &:active,
    &.active {
      background-color: $background;
          border-color: $border;
    }
  }
}

// Button sizes
@mixin button-size($padding-vertical, $padding-horizontal, $font-size, $line-height, $border-radius) {
    padding: $padding-vertical $padding-horizontal;
    font-size: $font-size;
    line-height: $line-height;
    border-radius: $border-radius;
}

// Opacity
@mixin opacity($opacity) {
  opacity: $opacity;
  // IE8 filter
  $opacity-ie: ($opacity * 100);
  filter: #{alpha(opacity=$opacity-ie)};
}

@mixin animLoading($animOpacity, $animTranslate) {
    opacity: $animOpacity;
    transform: translateY($animTranslate);
}


//////////////////// GOV.UK FRONTEND TOOLKIT ////////////////////

// Media query helpers. These make producing IE layouts super easy.

// The base css you write should be for mobile. You can then add desktop styles on top.
//
// Usage:
//
//   div.columns {
//     border: 1px solid;
//
//     @include media(desktop){
//       width: 30%;
//       float: left;
//     }
//     @include ie-lte(8) {
//       something to fix visual bugs in old IE
//     }
//     @include ie(6) {
//       padding: 0;
//     }
//   }


$is-ie: false !default;
$mobile-ie6: true !default;
$ie-version: 8;

@-ms-viewport {
    width: device-width;
}

@-o-viewport {
    width: device-width;
}

@mixin media($size: false, $max-width: false, $min-width: false, $ignore-for-ie: false) {
    @if $is-ie and ($ignore-for-ie == false) {
        @if $size != mobile {
            @if ($ie-version == 6 and $mobile-ie6 == false) or $ie-version > 6 {
                @content;
            }
        }
    } @else {
        @if $size == widescreen {
            @media (min-width: $size-widescreen){
                @content;
            }
        } @else if $size == desktop {
            @media (min-width: $size-desktop){
                @content;
            }
        } @else if $size == tablet {
            @media (min-width: $size-tablet){
                @content;
            }
        } @else if $size == mobile {
            @media (max-width: $size-mobile){
                @content;
            }
        } @else if $size == gt-iphone-landscape {
            @media (min-width: $size-iphone-landscape + 1px){
                @content;
            }
        } @else if $size == gt-iphone-portrait {
            @media (min-width: $size-iphone-portrait + 1px){
                @content;
            }
        } @else if $max-width != false {
            @media (max-width: $max-width){
                @content;
            }
        } @else if $min-width != false {
            @media (min-width: $min-width){
                @content;
            }
        } @else {
            @media (min-width: $size){
                @content
            }
        }
    }
}

@mixin ie-lte($version) {
  @if $is-ie {
    @if $ie-version <= $version {
      @content;
    }
  }
}
@mixin ie($version) {
  @if $is-ie {
    @if $ie-version == $version {
      @content;
    }
  }
}


@mixin linear-gradient-horizontal($color-left, $color-right){
    background: $color-left; /* Old browsers */
    background: -moz-linear-gradient(left,  $color-left 0%, $color-right 100%); /* FF3.6+ */
    background: -webkit-gradient(linear, left top, right top, color-stop(0%,$color-left), color-stop(100%,$color-right)); /* Chrome,Safari4+ */
    background: -webkit-linear-gradient(left,  $color-left 0%,$color-right 100%); /* Chrome10+,Safari5.1+ */
    background: -o-linear-gradient(left,  $color-left 0%,$color-right 100%); /* Opera 11.10+ */
    background: -ms-linear-gradient(left,  $color-left 0%,$color-right 100%); /* IE10+ */
    background: linear-gradient(to right,  $color-left 0%,$color-right 100%); /* W3C */
}

@mixin vertical-align {
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translateX(-50%) translateY(-50%);
}
